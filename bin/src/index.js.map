{
"version":3,
"file":"index.js",
"sourceRoot":"",
"sources":["file:///C:/Users/Jazz/Documents/Projects/haxe/react-web/template/src/Main.hx","file:///C:/Users/Jazz/Documents/Projects/haxe/react-web/template/.haxelib/react-next/react-next/src/lib/react/jsx/JsxPropsBuilder.hx","file:///C:/HaxeToolkit/haxe/std/haxe/iterators/ArrayIterator.hx","file:///C:/Users/Jazz/Documents/Projects/haxe/react-web/template/src/pages/Overview.hx","file:///C:/Users/Jazz/Documents/Projects/haxe/react-web/template/.haxelib/react-next/react-next/src/lib/react/ReactType.hx","file:///C:/Users/Jazz/Documents/Projects/haxe/react-web/template/.haxelib/react-next/react-next/src/lib/react/macro/ReactComponentMacro.hx"],
"sourcesContent":["package;\n\nimport pages.Overview;\nimport js.Browser;\nimport react.ReactComponent;\nimport react.ReactDOM;\nimport react.ReactMacro.jsx;\n\nusing Std;\n\nclass Main {\n\tstatic function main() {\n\t\tReactDOM.render(jsx('<$App/>'), Browser.document.getElementById('root'));\n\t}\n}\n\nprivate typedef Props = {\n\n}\n\nprivate typedef State = {\n\n}\n\n\n@:expose('App')\nclass App extends ReactComponentOf<Props, State> {\n\n\tpublic function new(props) {\n\t\tsuper(props);\n\n\t\tstate = {}\n\t}\n\n\toverride function render() {\n\t\treturn jsx('\n\t\t\t<Overview />\n\t\t');\n\t}\n}\n","package react.jsx;\r\n\r\n#if macro\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.TypeTools;\r\n\r\n#if (haxe_ver < 4)\r\nprivate typedef ObjectField = {field:String, expr:Expr};\r\n#end\r\n\r\nclass JsxPropsBuilder\r\n{\r\n\r\n\tstatic public function makeProps(spread:Array<Expr>, attrs:Array<ObjectField>, pos:Position)\r\n\t{\r\n\t\t#if (!debug && !react_no_inline)\r\n\t\tflattenSpreadProps(spread, attrs);\r\n\t\t#end\r\n\r\n\t\treturn spread.length > 0\r\n\t\t\t? makeSpread(spread, attrs, pos)\r\n\t\t\t: attrs.length == 0 ? macro {} : {pos:pos, expr:EObjectDecl(attrs)}\r\n\t}\r\n\r\n\t/**\r\n\t * Attempt flattening spread/default props into the user-defined props\r\n\t */\r\n\tstatic function flattenSpreadProps(spread:Array<Expr>, attrs:Array<ObjectField>)\r\n\t{\r\n\t\tfunction hasAttr(name:String) {\r\n\t\t\tfor (prop in attrs) if (prop.field == name) return true;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar mergeProps = getSpreadProps(spread, []);\r\n\t\tif (mergeProps.length > 0)\r\n\t\t{\r\n\t\t\tfor (prop in mergeProps)\r\n\t\t\t\tif (!hasAttr(prop.field)) attrs.push(prop);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic function makeSpread(spread:Array<Expr>, attrs:Array<ObjectField>, pos:Position)\r\n\t{\r\n\t\t// single spread, no props\r\n\t\tif (spread.length == 1 && attrs.length == 0)\r\n\t\t\treturn spread[0];\r\n\r\n\t\t// combine using Object.assign\r\n\t\tvar args = [macro {}].concat(spread);\r\n\t\tif (attrs.length > 0) args.push({pos:pos, expr:EObjectDecl(attrs)});\r\n\t\treturn macro (untyped Object).assign($a{args});\r\n\t}\r\n\r\n\t/**\r\n\t * Flatten literal objects into the props\r\n\t */\r\n\tstatic function getSpreadProps(spread:Array<Expr>, props:Array<ObjectField>)\r\n\t{\r\n\t\tif (spread.length == 0) return props;\r\n\t\tvar last = spread[spread.length - 1];\r\n\t\treturn switch (last.expr) {\r\n\t\t\tcase ECheckType({expr: EObjectDecl(fields)}, ct):\r\n\t\t\t\tspread.pop();\r\n\t\t\t\tvar newProps = props.concat(fields.map(function(f) {\r\n\t\t\t\t\tvar fname = f.field;\r\n\t\t\t\t\tvar fct = TypeTools.toComplexType(\r\n\t\t\t\t\t\tContext.typeof(\r\n\t\t\t\t\t\t\tmacro @:pos(f.expr.pos) (null :$ct).$fname\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\texpr: {expr: ECheckType(f.expr, fct), pos: f.expr.pos},\r\n\t\t\t\t\t\tfield: fname,\r\n\t\t\t\t\t\t#if (haxe_ver >= 4) quotes: f.quotes #end\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t\t// push props and recurse in case another literal object is in the list\r\n\t\t\t\tgetSpreadProps(spread, newProps);\r\n\r\n\t\t\tcase EObjectDecl(fields):\r\n\t\t\t\tspread.pop();\r\n\t\t\t\tvar newProps = props.concat(fields);\r\n\t\t\t\t// push props and recurse in case another literal object is in the list\r\n\t\t\t\tgetSpreadProps(spread, newProps);\r\n\t\t\tdefault:\r\n\t\t\t\tprops;\r\n\t\t}\r\n\t}\r\n}\r\n#end\r\n","/*\r\n * Copyright (C)2005-2018 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.iterators;\r\n\r\n/**\r\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\r\n**/\r\nclass ArrayIterator<T> {\r\n\tfinal array:Array<T>;\r\n\tvar current:Int = 0;\r\n\r\n\t/**\r\n\t\tCreate a new `ArrayIterator`.\r\n\t**/\r\n\t#if !hl inline #end\r\n\tpublic function new(array:Array<T>) {\r\n\t\tthis.array = array;\r\n\t}\r\n\r\n\t/**\r\n\t\tSee `Iterator.hasNext`\r\n\t**/\r\n\t#if !hl inline #end\r\n\tpublic function hasNext() {\r\n\t\treturn current < array.length;\r\n\t}\r\n\r\n\t/**\r\n\t\tSee `Iterator.next`\r\n\t**/\r\n\t#if !hl inline #end\r\n\tpublic function next() {\r\n\t\treturn array[current++];\r\n\t}\r\n}\r\n","package pages;\n\nimport react.ReactComponent;\nimport react.ReactMacro.jsx;\n\nclass Overview extends ReactComponent {\n\n\toverride function render():ReactFragment {\n\t\treturn jsx('\n\t\t<div>\n\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n\t\t\tut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum\n\t\t\tfacilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\n\t\t\tgravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\n\t\t\tdonec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\n\t\t\tadipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.\n\t\t\tMetus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis\n\t\t\timperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget\n\t\t\tarcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\n\t\t\tdonec massa sapien faucibus et molestie ac.\n\n\t\t\tConsequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\n\t\t\tfacilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\n\t\t\ttincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\n\t\t\tconsequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\n\t\t\tvulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In\n\t\t\thendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et\n\t\t\ttortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin\n\t\t\tnibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas\n\t\t\taccumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\n\t\t</div>\n\t\t');\n\t}\n}\n","package react;\r\n\r\nimport haxe.Constraints.Function;\r\nimport haxe.extern.EitherType;\r\n\r\n#if macro\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.Context;\r\n\r\nabstract ReactType(Dynamic)\r\n#else\r\nimport react.ReactComponent;\r\n\r\nprivate typedef Node = EitherType<EitherType<String, Function>, Class<ReactComponent<Dynamic, Dynamic>>>;\r\n\r\nabstract ReactType(Node) to Node\r\n#end\r\n{\r\n\t#if !macro\r\n\t@:from\r\n\tstatic public function fromString(s:String):ReactType\r\n\t{\r\n\t\t#if debug\r\n\t\tif (s == null) return isNull();\r\n\t\t#end\r\n\t\treturn cast s;\r\n\t}\r\n\r\n\t@:from\r\n\tstatic public function fromFunction(f:Void->ReactFragment):ReactType\r\n\t{\r\n\t\t#if debug\r\n\t\tif (f == null) return isNull();\r\n\t\t#end\r\n\t\treturn cast f;\r\n\t}\r\n\r\n\t@:from\r\n\tstatic public function fromFunctionWithProps<TProps>(f:TProps->ReactFragment):ReactType\r\n\t{\r\n\t\t#if debug\r\n\t\tif (f == null) return isNull();\r\n\t\t#end\r\n\t\treturn cast f;\r\n\t}\r\n\r\n\t@:from\r\n\tstatic public function fromComp(cls:Class<ReactComponent<Dynamic, Dynamic>>):ReactType\r\n\t{\r\n\t\t#if debug\r\n\t\tif (cls == null) return isNull();\r\n\t\t#end\r\n\r\n\t\tif (untyped cls.__jsxStatic != null)\r\n\t\t\treturn untyped cls.__jsxStatic;\r\n\r\n\t\treturn cast cls;\r\n\t}\r\n\r\n\t#if debug\r\n\tstatic public function isNull():ReactType {\r\n\t\tjs.Browser.console.error(\r\n\t\t\t'Runtime value for ReactType is null.'\r\n\t\t\t+ ' Something may be wrong with your externs.'\r\n\t\t);\r\n\r\n\t\treturn cast \"div\";\r\n\t}\r\n\t#end\r\n\t#end\r\n\r\n\t@:from\r\n\tstatic public macro function fromExpr(expr:Expr)\r\n\t{\r\n\t\tswitch (Context.typeof(expr)) {\r\n\t\t\tcase TType(_.get() => def, _):\r\n\t\t\t\ttry {\r\n\t\t\t\t\tswitch (Context.getType(def.module)) {\r\n\t\t\t\t\t\tcase TInst(_.get() => clsType, _):\r\n\t\t\t\t\t\t\tif (!clsType.meta.has(react.jsx.JsxStaticMacro.META_NAME))\r\n\t\t\t\t\t\t\t\tContext.error(\r\n\t\t\t\t\t\t\t\t\t'Incompatible class for ReactType: expected a ReactComponent or a @:jsxStatic component',\r\n\t\t\t\t\t\t\t\t\texpr.pos\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\treturn macro {\r\n\t\t\t\t\t\t\t\t\t$expr.__jsxStatic;\r\n\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tdefault: throw '';\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e:Dynamic) {\r\n\t\t\t\t\tContext.error(\r\n\t\t\t\t\t\t'Incompatible expression for ReactType',\r\n\t\t\t\t\t\texpr.pos\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tContext.error(\r\n\t\t\t\t\t'Incompatible expression for ReactType',\r\n\t\t\t\t\texpr.pos\r\n\t\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nabstract ReactTypeOf<TProps>(ReactType) to ReactType {\r\n\tprivate inline function new(node:ReactType) this = node;\r\n\r\n\t#if !macro\r\n\t@:from\r\n\tstatic public function fromFunctionWithProps<TProps>(f:TProps->ReactFragment):ReactTypeOf<TProps>\r\n\t{\r\n\t\treturn new ReactTypeOf(f);\r\n\t}\r\n\r\n\t@:from\r\n\tstatic public function fromComp<TProps:{}, TState:{}>(\r\n\t\tcls:Class<ReactComponentOf<TProps, TState>>\r\n\t):ReactTypeOf<TProps>\r\n\t{\r\n\t\treturn new ReactTypeOf(cls);\r\n\t}\r\n\r\n\t@:from\r\n\tstatic public function fromFunctionWithoutProps<TProps>(f:Void->ReactFragment):ReactTypeOf<TProps>\r\n\t{\r\n\t\treturn new ReactTypeOf(f);\r\n\t}\r\n\r\n\t@:from\r\n\tstatic public function fromCompWithoutProps<TProps:{}, TState:{}>(\r\n\t\tcls:Class<ReactComponentOf<react.Empty, TState>>\r\n\t):ReactTypeOf<TProps>\r\n\t{\r\n\t\treturn new ReactTypeOf(cls);\r\n\t}\r\n\t#end\r\n\r\n\t#if coconut_react_core\r\n\tpublic function fromHxx(hxxMeta:{ ?key:coconut.react.Key }, props:TProps):ReactElement\r\n\t{\r\n\t\treturn React.createElement(this, js.Object.assign(cast props, hxxMeta));\r\n\t}\r\n\t#end\r\n\r\n\t@:from\r\n\tstatic public macro function fromExpr(expr:Expr)\r\n\t{\r\n\t\tif (!isReactType(expr))\r\n\t\t{\r\n\t\t\tContext.error('Incompatible expression for ReactType', expr.pos);\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tswitch (Context.getExpectedType()) {\r\n\t\t\tcase TAbstract(_, [TType(_.get() => tProps, [])]):\r\n\t\t\t\tContext.error(\r\n\t\t\t\t\t'Props do not unify with ${tProps.name}',\r\n\t\t\t\t\texpr.pos\r\n\t\t\t\t);\r\n\r\n\t\t\tcase TAbstract(\r\n\t\t\t\t_.toString() => 'Null',\r\n\t\t\t\t[TAbstract(_, [TType(_.get() => tProps, [])])]\r\n\t\t\t):\r\n\t\t\t\tContext.error(\r\n\t\t\t\t\t'Props do not unify with ${tProps.name}',\r\n\t\t\t\t\texpr.pos\r\n\t\t\t\t);\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tContext.error('Props do not unify', expr.pos);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t#if macro\r\n\tstatic function isReactType(expr:Expr):Bool\r\n\t{\r\n\t\ttry {\r\n\t\t\tContext.typeExpr(macro { var a:react.ReactType = $e{expr}; });\r\n\t\t\treturn true;\r\n\t\t} catch (e:Dynamic) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t#end\r\n}\r\n\r\n","package react.macro;\r\n\r\n#if macro\r\nimport haxe.macro.ComplexTypeTools;\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.Type;\r\nimport haxe.macro.TypeTools;\r\n\r\nimport react.jsx.JsxStaticMacro;\r\n\r\ntypedef Builder = ClassType -> Array<Field> -> Array<Field>;\r\ntypedef BuilderWithKey = {?key:String, build:Builder};\r\n\r\n#if (haxe_ver < 4)\r\nprivate typedef ObjectField = {field:String, expr:Expr};\r\n#end\r\n\r\ntypedef ComponentInfo = {\r\n\tisExtern:Bool,\r\n\tref:Expr,\r\n\ttprops:Null<ComplexType>,\r\n\tprops:Array<ObjectField>\r\n}\r\n\r\ntypedef ExtendedObjectField = {\r\n\t> ObjectField,\r\n\t?isConstant:Bool\r\n}\r\n\r\n@:dce\r\nclass ReactComponentMacro {\r\n\tstatic public inline var REACT_COMPONENT_BUILDER = \"ReactComponent\";\r\n\t@:deprecated static public inline var ACCEPTS_MORE_PROPS_META = ReactMeta.AcceptsMoreProps;\r\n\r\n\tstatic var componentsMap:Map<String, ComponentInfo> = new Map();\r\n\r\n\tstatic var builders:Array<BuilderWithKey> = [\r\n\t\t{build: buildComponent, key: REACT_COMPONENT_BUILDER},\r\n\r\n\t\t#if (haxe4 && react_auto_jsx)\r\n\t\t{build: react.jsx.JsxMacro.handleMarkup, key: \"todo\"},\r\n\t\t#end\r\n\r\n\t\t{build: ContextMacro.buildComponent, key: ContextMacro.REACT_CONTEXT_BUILDER},\r\n\t\t{build: ReactTypeMacro.alterComponentSignatures, key: ReactTypeMacro.ALTER_SIGNATURES_BUILDER},\r\n\r\n\t\t// Disable unneeded builders for completion\r\n\t\t#if !display\r\n\t\t{build: JsxStaticMacro.disallowInReactComponent, key: JsxStaticMacro.DISALLOW_IN_REACT_COMPONENT_BUILDER},\r\n\t\t#end\r\n\r\n\t\t{build: ReactWrapperMacro.buildComponent, key: ReactWrapperMacro.WRAP_BUILDER},\r\n\t\t{build: PureComponentMacro.buildComponent, key: PureComponentMacro.PURE_COMPONENT_BUILDER},\r\n\r\n\t\t// Disable unneeded builders for completion\r\n\t\t#if !display\r\n\t\t#if !react_ignore_empty_render\r\n\t\t{build: ReactTypeMacro.ensureRenderOverride, key: ReactTypeMacro.ENSURE_RENDER_OVERRIDE_BUILDER},\r\n\t\t#end\r\n\r\n\t\t#if debug\r\n\t\t{build: ReactTypeMacro.checkGetDerivedState, key: ReactTypeMacro.CHECK_GET_DERIVED_STATE_BUILDER},\r\n\t\t#end\r\n\r\n\t\t#if (debug && react_runtime_warnings)\r\n\t\t{build: ReactDebugMacro.buildComponent, key: ReactDebugMacro.REACT_DEBUG_BUILDER},\r\n\t\t#end\r\n\t\t#end\r\n\t];\r\n\r\n\tstatic public function appendBuilder(builder:Builder, ?key:String):Void {\r\n\t\tbuilders.push({build: builder, key: key});\r\n\t}\r\n\r\n\tstatic public function prependBuilder(builder:Builder, ?key:String):Void {\r\n\t\tbuilders.unshift({build: builder, key: key});\r\n\t}\r\n\r\n\tstatic public function hasBuilder(key:String):Bool {\r\n\t\tif (key == null) return false;\r\n\t\treturn Lambda.exists(builders, function(b) return b.key == key);\r\n\t}\r\n\r\n\tstatic public function insertBuilderBefore(before:String, builder:Builder, ?key:String):Void {\r\n\t\tvar index = -1;\r\n\t\tif (before != null) {\r\n\t\t\tfor (i in 0...builders.length) {\r\n\t\t\t\tif (builders[i].key == before) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (index == -1) return appendBuilder(builder, key);\r\n\t\tbuilders.insert(index, {build: builder, key: key});\r\n\t}\r\n\r\n\tstatic public function insertBuilderAfter(after:String, builder:Builder, ?key:String):Void {\r\n\t\tvar index = -1;\r\n\t\tif (after != null) {\r\n\t\t\tfor (i in 0...builders.length) {\r\n\t\t\t\tif (builders[i].key == after) {\r\n\t\t\t\t\tindex = i + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (index == -1) return appendBuilder(builder, key);\r\n\t\tbuilders.insert(index, {build: builder, key: key});\r\n\t}\r\n\r\n\tstatic public function build():Array<Field> {\r\n\t\tvar inClass = Context.getLocalClass().get();\r\n\r\n\t\t#if !react_skip_extend_component_restriction\r\n\t\tif (!inClass.isExtern) {\r\n\t\t\tswitch (inClass.superClass) {\r\n\t\t\t\tcase {params: params, t: _.toString() => cls}\r\n\t\t\t\tif (cls == 'react.ReactComponentOf' || cls == 'react.PureComponentOf'):\r\n\t\t\t\t\t// Ok\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tContext.fatalError(\r\n\t\t\t\t\t\t'A react component must be a direct child of either `ReactComponent` or `PureComponent`.',\r\n\t\t\t\t\t\tinClass.pos\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t#end\r\n\r\n\t\treturn Lambda.fold(\r\n\t\t\tbuilders,\r\n\t\t\tfunction(builder, fields) return builder.build(inClass, fields),\r\n\t\t\tContext.getBuildFields()\r\n\t\t);\r\n\t}\r\n\r\n\t/* METADATA */\r\n\r\n\tstatic public function buildVariadic():ComplexType {\r\n\t\treturn switch (Context.getLocalType()) {\r\n\t\t\tcase TInst(_, []):\r\n\t\t\t\t#if react_disable_dynamic_components\r\n\t\t\t\treturn macro :react.ReactComponent.ReactComponentOf<react.Empty, react.Empty>;\r\n\t\t\t\t#else\r\n\t\t\t\treturn macro :react.ReactComponent.ReactComponentOf<Dynamic, Dynamic>;\r\n\t\t\t\t#end\r\n\r\n\t\t\tcase TInst(_, [tprops]):\r\n\t\t\t\tvar ctprops = TypeTools.toComplexType(tprops);\r\n\t\t\t\treturn macro :react.ReactComponent.ReactComponentOf<$ctprops, Empty>;\r\n\r\n\t\t\tcase TInst(_, [tprops, tstate]):\r\n\t\t\t\tvar ctprops = TypeTools.toComplexType(tprops);\r\n\t\t\t\tvar ctstate = TypeTools.toComplexType(tstate);\r\n\t\t\t\treturn macro :react.ReactComponent.ReactComponentOf<$ctprops, $ctstate>;\r\n\r\n\t\t\tdefault: throw false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Process React components\r\n\t */\r\n\tstatic public function buildComponent(inClass:ClassType, fields:Array<Field>):Array<Field> {\r\n\t\tvar pos = Context.currentPos();\r\n\r\n\t\t#if (react_force_inline || (!debug && !react_no_inline))\r\n\t\tstoreComponentInfos(fields, inClass, pos);\r\n\t\t#end\r\n\r\n\t\tif (!inClass.isExtern)\r\n\t\t\ttagComponent(fields, inClass, pos);\r\n\r\n\t\treturn fields;\r\n\t}\r\n\r\n\t/**\r\n\t * Extract component default props\r\n\t */\r\n\tstatic function storeComponentInfos(fields:Array<Field>, inClass:ClassType, pos:Position)\r\n\t{\r\n\t\tvar key = getClassKey(inClass);\r\n\r\n\t\tfor (field in fields)\r\n\t\t\tif (field.name == 'defaultProps')\r\n\t\t\t{\r\n\t\t\t\tswitch (field.kind) {\r\n\t\t\t\t\tcase FieldType.FVar(ct, _.expr => EObjectDecl(props)):\r\n\t\t\t\t\t\tif (ct == null) {\r\n\t\t\t\t\t\t\tvar types = MacroUtil.extractComponentTypes(inClass);\r\n\t\t\t\t\t\t\tvar tprops = TypeTools.toComplexType(\r\n\t\t\t\t\t\t\t\tContext.follow(ComplexTypeTools.toType(types.tprops))\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tct = switch (tprops) {\r\n\t\t\t\t\t\t\t\tcase TPath({name: \"Dynamic\", params: [], pack: []}): macro :Dynamic;\r\n\t\t\t\t\t\t\t\tdefault: macro :react.Partial<$tprops>;\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tct = TypeTools.toComplexType(\r\n\t\t\t\t\t\t\t\tContext.follow(ComplexTypeTools.toType(ct))\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcomponentsMap.set(key, {\r\n\t\t\t\t\t\t\tref: getClassRef(inClass),\r\n\t\t\t\t\t\t\tisExtern: inClass.isExtern,\r\n\t\t\t\t\t\t\ttprops: ct,\r\n\t\t\t\t\t\t\tprops: props.copy()\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\tcomponentsMap.set(key, {\r\n\t\t\tprops: null,\r\n\t\t\ttprops: null,\r\n\t\t\tref: getClassRef(inClass),\r\n\t\t\tisExtern: inClass.isExtern\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * For a given type, resolve default props and resolve user-defined constant\r\n\t * props out (if not constant, we cannot be sure it won't resolve to\r\n\t * `js.Lib.undefined` and have different behavior)\r\n\t */\r\n\tstatic public function getDefaultProps(typeInfo:ComponentInfo, attrs:Array<ExtendedObjectField>)\r\n\t{\r\n\t\tif (typeInfo == null) return null;\r\n\r\n\t\tif (typeInfo.props != null)\r\n\t\t\treturn typeInfo.props.filter(function(defaultProp) {\r\n\t\t\t\tvar name = defaultProp.field;\r\n\t\t\t\tfor (prop in attrs) if (prop.field == name) return !prop.isConstant;\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Annotate React components for run-time JS reflection\r\n\t */\r\n\tstatic function tagComponent(fields:Array<Field>, inClass:ClassType, pos:Position)\r\n\t{\r\n\t\t#if !debug return; #end\r\n\t\tif (inClass.isExtern) return;\r\n\r\n\t\taddDisplayName(fields, inClass, pos);\r\n\r\n\t\t#if react_hot\r\n\t\taddTagSource(fields, inClass, pos);\r\n\t\t#end\r\n\t}\r\n\r\n\tstatic function addTagSource(fields:Array<Field>, inClass:ClassType, pos:Position)\r\n\t{\r\n\t\t// add a __fileName__ static field\r\n\t\tvar className = inClass.name;\r\n\t\tvar fileName = Context.getPosInfos(inClass.pos).file;\r\n\r\n\t\tfields.push({\r\n\t\t\tname:'__fileName__',\r\n\t\t\taccess:[Access.AStatic],\r\n\t\t\tkind:FieldType.FVar(null, macro $v{fileName}),\r\n\t\t\tpos:pos\r\n\t\t});\r\n\t}\r\n\r\n\tstatic function addDisplayName(fields:Array<Field>, inClass:ClassType, pos:Position)\r\n\t{\r\n\t\tfor (field in fields)\r\n\t\t\tif (field.name == 'displayName') return;\r\n\r\n\t\t// add 'displayName' static property to see class names in React inspector panel\r\n\t\tvar className = macro $v{inClass.name};\r\n\t\tvar field:Field = {\r\n\t\t\tname:'displayName',\r\n\t\t\taccess:[Access.AStatic, Access.APrivate],\r\n\t\t\tkind:FieldType.FVar(null, className),\r\n\t\t\tpos:pos\r\n\t\t}\r\n\t\tfields.push(field);\r\n\t\treturn;\r\n\t}\r\n\r\n\tstatic public function getComponentInfo(expr:Expr):ComponentInfo\r\n\t{\r\n\t\tvar key = getExprKey(expr);\r\n\t\treturn key != null ? componentsMap.get(key) : null;\r\n\t}\r\n\r\n\tstatic function getClassKey(inClass:ClassType)\r\n\t{\r\n\t\tvar qname = inClass.pack.concat([inClass.name]).join('.');\r\n\t\treturn 'Class<$qname>';\r\n\t}\r\n\r\n\tstatic function getExprKey(expr:Expr)\r\n\t{\r\n\t\treturn try switch (Context.typeof(expr)) {\r\n\t\t\tcase Type.TType(_.get() => t, _): t.name;\r\n\t\t\tdefault: null;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic function getClassRef(inClass:ClassType, ?pos:Position):Expr\r\n\t{\r\n\t\tif (pos == null) pos = Context.currentPos();\r\n\r\n\t\tvar mod = inClass.module;\r\n\t\tif (!StringTools.endsWith(mod, '.' + inClass.name)) {\r\n\t\t\tmod += '.' + inClass.name;\r\n\t\t}\r\n\r\n\t\treturn macro @:pos(pos) $p{mod.split('.')};\r\n\t}\r\n}\r\n#end\r\n"],
"names":[],
"mappings":";;;;;;;;;YAWwB,WACtB;AAAA,iBAAsB,kDCUO,KDVG,+BAAiC;AAAjE;;+BAgB0B;AAAA,CAC1B,0BAAM;AADoB,CAG1B,aAAQ;AAHkB;;;SAMA,WAC1B;AAAA,SACE,6DCd2B;ADa7B;;mCEDO,gBAPT;AAAA,CAEmB,AAAlB,eAAkB;AAFnB,CASE,aAAa;AATf;;UAgB2B,WACzB;AAAA,SAAO,eAAU;AAAjB;QAOsB,WACtB;AAAA,SAAO,WAAM;AAAb;;qBC/CF;AAAA;AAAA;;;SAE0C,WACxC;AAAA,SACC,sDFa4B,IEbxB;AADL;;;;;6BCaD;AAAA,CAEC,EAAI,MAAK,MAAM;AAAA,SAAO;AAAP;AAFhB,CAIC,OAAO,AAAK;AAJb;2BA2BA;AAAA,CAEC,EAAI,QAAO,MAAM;AAAA,SAAO;AAAP;AAFlB,CAKC,EAAY,oBAAmB,MAC9B;AAAA,SAAe;AAAf;AANF,CAQC,OAAO,AAAK;AARb;yBAY0C;AAAA,CACzC,sBACC,AAAC,yCACE;AAHqC,CAMzC,OAAO,AAAK;AAN6B;kBC+NjB;;;;;"
}